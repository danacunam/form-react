{"version":3,"sources":["components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","nombre","apellido","email","pais","description","files","user","setUser","imgUl","e","a","file","target","formData","FormData","append","axios","post","headers","res","data","secure_url","document","getElementById","src","handleChange","name","value","onSubmit","preventDefault","type","placeholder","onChange","htmlFor","id","cols","rows","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iQAiGeA,EA9FF,WAET,MAAwBC,mBAAS,CAC7BC,OAAQ,GACRC,SAAU,GACVC,MAAM,GACNC,KAAM,GACNC,YAAa,GACbC,MAAM,KANV,mBAAOC,EAAP,KAAaC,EAAb,KASMC,EAAK,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACJC,EAAOF,EAAEG,OAAOP,MAAM,IACtBQ,EAAW,IAAIC,UACZC,OAAO,OAAQJ,GACxBE,EAASE,OAAO,gBAAiB,YAJvB,SAMQC,IAAMC,KAAN,yDAEdJ,EACA,CACIK,QAAS,CACL,eAAgB,yBAXlB,OAMJC,EANI,OAeVb,EAAKD,MAAQc,EAAIC,KAAKC,WACtBC,SAASC,eAAe,WAAWC,IAAMlB,EAAKD,MAhBpC,2CAAH,sDAmBLoB,EAAe,SAAChB,GAEdF,EAAQ,2BACLD,GADI,kBAENG,EAAEG,OAAOc,KAAOjB,EAAEG,OAAOe,UAanC,OAEK,mCACI,uBAAMC,SAZE,SAACnB,GAGjBA,EAAEoB,kBASM,UAGI,uBAAOC,KAAK,OAAOC,YAAY,oBAAoBL,KAAK,SAASC,MAAOrB,EAAKN,OAAQgC,SAAUP,IAE/F,uBAAOK,KAAK,OAAOJ,KAAK,WAAWK,YAAY,sBAAsBJ,MAAOrB,EAAKL,SAAU+B,SAAUP,IAErG,uBAAOK,KAAK,QAAQJ,KAAK,QAAQK,YAAY,mBAAmBJ,MAAOrB,EAAKJ,MAAO8B,SAAUP,IAI7F,uBAAOQ,QAAQ,OAAf,oCACA,yBAAQP,KAAK,OAAOM,SAAUP,EAA9B,UACI,wBAAQE,MAAM,SAAd,wBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,wBAOA,uBAAOG,KAAK,OAAOJ,KAAK,QAAQM,SAAUxB,IAK9C,0BAAUkB,KAAK,cAAcQ,GAAG,GAAGC,KAAK,KAAKC,KAAK,KAAKT,MAAOrB,EAAKF,YAAa4B,SAAUP,IAE1F,uBAAOK,KAAK,SAASJ,KAAK,SAASC,MAAM,WAE1C,sBAAKO,GAAG,OAAR,UACI,4BAAI5B,EAAKN,SACT,4BAAIM,EAAKL,WACT,4BAAIK,EAAKJ,QACT,4BAAII,EAAKH,OACT,qBAAK+B,GAAG,qB,MChFZG,MANf,WACE,OACC,cAAC,EAAD,KCOYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1Be,M","file":"static/js/main.c0bdf647.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport axios from 'axios'\n\nconst Form = () => {\n  \n    const [user, setUser] = useState({\n        nombre: '',\n        apellido: '',\n        email:'', \n        pais: '',\n        description: '',\n        files:''\n    })\n        \n    const imgUl = async (e) =>{\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        formData.append('upload_preset', 'w8z6qhfr');\n\n        const res = await axios.post(\n            `https://api.cloudinary.com/v1_1/dwsremshi/image/upload`,\n            formData,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n        );        \n        user.files = res.data.secure_url\n        document.getElementById('usuario').src = user.files\n    }\n\n    const handleChange = (e) =>{\n\n            setUser({\n            ...user,\n            [e.target.name]: e.target.value,\n        })        \n     }\n\n   const sendData = (e)=>{\n    \n    \n    e.preventDefault() \n    }\n\n\n    \n    \n   return (\n        \n        <>  \n            <form onSubmit={sendData}>\n\n              \n                <input type=\"text\" placeholder=\"Escribe tu nombre\" name=\"nombre\" value={user.nombre} onChange={handleChange}/>\n\n                <input type=\"text\" name=\"apellido\" placeholder=\"Escribe tu apellido\" value={user.apellido} onChange={handleChange}/>\n            \n                <input type=\"email\" name=\"email\" placeholder=\"Escribe tu email\" value={user.email} onChange={handleChange} />\n\n               \n                \n                <label htmlFor=\"pais\">Selecciona el país:</label>\n                <select name=\"pais\" onChange={handleChange}>\n                    <option value=\"mexico\"> México</option>\n                    <option value=\"colombia\">Colombia</option>\n                    <option value=\"peru\">Perú</option> \n                </select> \n\n               \n                \n           \n                 \n                    <input type=\"file\" name=\"files\" onChange={imgUl} /> \n                    \n                \n               \n\n                <textarea name=\"description\" id=\"\" cols=\"30\" rows=\"10\" value={user.description} onChange={handleChange}></textarea>\n\n                <input type=\"submit\" name=\"submit\" value=\"Enviar\"/>\n               \n               <div id=\"card\">\n                   <p>{user.nombre}</p>\n                   <p>{user.apellido}</p>\n                   <p>{user.email}</p>\n                   <p>{user.pais}</p>\n                   <img id=\"usuario\"></img>\n               </div>\n          </form>\n        </>\n        \n    ) \n}\n\nexport default Form\n","import Form from './components/Form'\nimport './App.css';\n\nfunction App() {\n  return (\n   <Form />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}